apiVersion: v1
kind: Secret
metadata:
  name: ecr-registry-helper-secrets
stringData:
  AWS_SECRET_ACCESS_KEY: ""
  AWS_ACCESS_KEY_ID: ""
  AWS_ACCOUNT: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ecr-registry-helper-cm
data:
  AWS_REGION: "ap-east-1"
  DOCKER_SECRET_NAME: regcred
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: ecr-registry-helper
spec:
  schedule: "* * * * *"
  successfulJobsHistoryLimit: 3
  suspend: false
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: sa-health-check
          containers:
            - name: ecr-registry-helper
              image: jj891070/aws-kubectl:latest
              imagePullPolicy: IfNotPresent
              envFrom:
                - secretRef:
                    name: ecr-registry-helper-secrets
                - configMapRef:
                    name: ecr-registry-helper-cm
              command:
                - /bin/sh
                - -c
                - |-
                  ECR_TOKEN=`aws ecr get-login-password --region ${AWS_REGION}`
                  NAMESPACE_NAME=default
                  kubectl delete secret --ignore-not-found $DOCKER_SECRET_NAME -n $NAMESPACE_NAME
                  kubectl create secret docker-registry $DOCKER_SECRET_NAME \
                  --docker-server=https://${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com \
                  --docker-username=AWS \
                  --docker-password="${ECR_TOKEN}" \
                  --namespace=$NAMESPACE_NAME
                  echo "Secret was successfully updated at $(date)"
                  curl 10.20.0.79
                  sleep 2
          restartPolicy: Never
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sa-health-check
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: role-full-access-to-secrets
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["regcred"]
    verbs: ["delete"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create"]
  - apiGroups: ["", "extensions", "apps", "batch"]
    resources:
      [
        "deployments",
        "jobs",
        "cronjobs",
        "replicasets",
        "pods",
        "pods/log",
        "configmaps",
      ]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs:
      [
        "create",
        "delete",
        "deletecollection",
        "get",
        "list",
        "patch",
        "update",
        "watch",
      ]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: health-check-role-binding
subjects:
  - kind: ServiceAccount
    name: sa-health-check
    apiGroup: ""
roleRef:
  kind: Role
  name: role-full-access-to-secrets
  apiGroup: ""
---

